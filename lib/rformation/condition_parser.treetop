grammar Condition
  rule root
    ospace condition ospace <RFormation::ConditionAST::Root>
  end
  rule condition
    or_condition  
  end
  rule or_condition
      and_condition space "or" space or_condition <RFormation::ConditionAST::Or>
    / and_condition
  end
  rule and_condition
      atomic_condition space "and" space and_condition <RFormation::ConditionAST::And>
    / atomic_condition
  end
  rule atomic_condition
      "(" ospace condition ospace ")" <RFormation::ConditionAST::Parentheses>
    / "not" ospace "(" ospace condition ospace ")" <RFormation::ConditionAST::Not>
    / f:any_value space "equals" space v:any_value <RFormation::ConditionAST::Equals>
    / f:any_value space "not" space "equals" space v:any_value <RFormation::ConditionAST::NotEquals>
    / f:any_value space "is" space "on" <RFormation::ConditionAST::IsOn>
    / f:any_value space "is" space "off" <RFormation::ConditionAST::IsOff>
  end
  rule any_value
      [^ \t\n\r\f()'"`#]+ <RFormation::ConditionAST::Identifier>
    / '"' ([^\\"] / "\\" .)* '"' <RFormation::ConditionAST::DoubleString>
    / "'" ([^\\'] / "\\" .)* "'" <RFormation::ConditionAST::SingleString>
    / "`" ([^\\`] / "\\" .)* "`" <RFormation::ConditionAST::BackString>
  end
  rule space
    ([ \t\n\r\f] / "#" [^\n]*)+
  end
  rule ospace
    space?
  end
end
